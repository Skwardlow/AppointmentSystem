package ru.eltex.project.simpleappointer.entities;


import lombok.NoArgsConstructor;

import javax.persistence.*;

/**
 * This entity class represents a Date class that allows to
 * keep working with data records in DB
 * @version 1.0
 * @author skwardlow
 * @see Entity
 * @see Table
 * @see lombok.Setter
 * */
@lombok.Setter
@lombok.Getter

@Entity
@Table(name ="date")
@NoArgsConstructor
public class Date {
    /**
     * This field setting up a beginning hour in the day. not available in DB
     * @see Transient
     * */
    @Transient
    private static Integer beginWorkDayHour = 9;
    /**
     * This field setting up a time for one appointment. not available in DB
     * @see Transient
     * */
    @Transient
    private static Integer gradTimeOfAppointment = 60;
    /**
     * This field setting up a amount of appointments in the day. not available in DB
     * @see Transient
     * */
    @Transient
    private static Integer amountOfAppointment = 8;
    /**
     * An id field for DB identification, automatically generated by db
     * @see Id
     * @see GeneratedValue
     * */
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    private Integer id;
    /**
     * Field for saving appointment date
     * */
    private String dateOfAppointment;
    /**
     * Field for an index in day.
     * see previous fields for understanding
     * */
    private Integer indexInDay;
    /**
     * Field for saving a [S]pecialist [Username]
     * */
    private String susername;
    /**
     * Field for saving [C]lient [Username]
     * */
    private String cusername;
    /**
     * Simple Date constructor for saving and creating a new Date object
     * for noargs
     * @see NoArgsConstructor
     * */
    public Date(String dateOfAppointment, Integer indexInDay, String susername, String cusername) {
        this.dateOfAppointment = dateOfAppointment;
        this.indexInDay = indexInDay;
        this.susername = susername;
        this.cusername = cusername;
    }


}
